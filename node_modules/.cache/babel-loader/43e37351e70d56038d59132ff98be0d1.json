{"ast":null,"code":"var _jsxFileName = \"/Users/diegoricca/Documents/React/MERNTasks/cliente/src/context/Proyecto/proyectoState.js\";\nimport React, { useReducer } from 'react';\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREGAR_PROYECTOS, VALIDAR_FORMULARIO, SELECCIONAR_PROYECTO, ELIMINAR_PROYECTO } from '../../types/index';\nimport clienteAxios from '../../config/axios';\n\nconst ProyectoState = props => {\n  const proyectostemp = [];\n  const initialState = {\n    proyectos: [],\n    formulario: false,\n    error: false,\n    proyecto: null\n  }; //Dispatch para ejecutar las acciones\n\n  const [state, dispatch] = useReducer(proyectoReducer, initialState); //defino las funciones para el CRUD de formularios\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_PROYECTO\n    });\n  };\n\n  const obtenerProyectos = async () => {\n    try {\n      const resultado = await clienteAxios.get('/api/proyectos');\n      dispatch({\n        type: OBTENER_PROYECTOS,\n        payload: resultado.data.proyectos\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const agregarProyecto = async proyecto => {\n    try {\n      const resultado = await clienteAxios.post('/api/proyectos', proyecto);\n      dispatch({\n        type: AGREGAR_PROYECTOS,\n        payload: resultado.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const mostrarError = () => {\n    dispatch({\n      type: VALIDAR_FORMULARIO\n    });\n  };\n\n  const seleccionarProyecto = idProyecto => {\n    dispatch({\n      type: SELECCIONAR_PROYECTO,\n      payload: idProyecto\n    });\n  };\n\n  const eliminarProyecto = async idProyecto => {\n    try {\n      await clienteAxios.delete(`/api/proyectos/${idProyecto}`);\n      dispatch({\n        type: ELIMINAR_PROYECTO,\n        payload: idProyecto\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(proyectoContext.Provider, {\n    value: {\n      proyectos: state.proyectos,\n      formulario: state.formulario,\n      error: state.error,\n      proyecto: state.proyecto,\n      mostrarFormulario,\n      obtenerProyectos,\n      agregarProyecto,\n      mostrarError,\n      seleccionarProyecto,\n      eliminarProyecto\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ProyectoState;","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/MERNTasks/cliente/src/context/Proyecto/proyectoState.js"],"names":["React","useReducer","proyectoContext","proyectoReducer","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTOS","VALIDAR_FORMULARIO","SELECCIONAR_PROYECTO","ELIMINAR_PROYECTO","clienteAxios","ProyectoState","props","proyectostemp","initialState","proyectos","formulario","error","proyecto","state","dispatch","mostrarFormulario","type","obtenerProyectos","resultado","get","payload","data","console","log","agregarProyecto","post","mostrarError","seleccionarProyecto","idProyecto","eliminarProyecto","delete","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\nimport proyectoContext from './proyectoContext'\nimport proyectoReducer from './proyectoReducer'\nimport {\n    FORMULARIO_PROYECTO, \n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTOS,\n    VALIDAR_FORMULARIO,\n    SELECCIONAR_PROYECTO,\n    ELIMINAR_PROYECTO} from '../../types/index'\nimport clienteAxios from '../../config/axios'\n\n\nconst ProyectoState = props=>{\n    \n    const proyectostemp = [\n        \n    ]\n    \n    const initialState={\n        proyectos : [],\n        formulario:false,\n        error: false, \n        proyecto: null\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state,dispatch] = useReducer(proyectoReducer, initialState)\n\n\n    //defino las funciones para el CRUD de formularios\n    const mostrarFormulario =()=>{\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        })\n    }\n\n    const obtenerProyectos = async ()=>{\n        try {\n            const resultado = await clienteAxios.get('/api/proyectos');\n            dispatch({\n                type: OBTENER_PROYECTOS,\n                payload: resultado.data.proyectos\n            })\n        } catch (error) {\n            console.log(error)\n        }\n        \n    }\n\n    const agregarProyecto = async proyecto =>{\n\n        try {\n            const resultado = await clienteAxios.post('/api/proyectos',proyecto);\n            dispatch({\n                type: AGREGAR_PROYECTOS,\n                payload: resultado.data\n            })\n        } catch (error) {\n            console.log(error);\n\n        }\n        \n        \n    }\n\n    const mostrarError = () =>{\n        dispatch({\n            type: VALIDAR_FORMULARIO\n        })\n    }\n\n    const seleccionarProyecto = (idProyecto) =>{\n        dispatch({\n            type: SELECCIONAR_PROYECTO,\n            payload:idProyecto\n        })\n    }\n\n    const eliminarProyecto = async (idProyecto) =>{\n        try {\n            await clienteAxios.delete(`/api/proyectos/${idProyecto}`);\n            dispatch({\n                type:ELIMINAR_PROYECTO,\n                payload:idProyecto\n            })\n        } catch (error) {\n            console.log(error);\n        }\n        \n       \n    }\n\n    return (\n        <proyectoContext.Provider\n            value={{\n                proyectos: state.proyectos,\n                formulario: state.formulario,\n                error: state.error,\n                proyecto: state.proyecto,\n                mostrarFormulario, \n                obtenerProyectos,\n                agregarProyecto,\n                mostrarError, \n                seleccionarProyecto,\n                eliminarProyecto\n            }}\n        >\n            {props.children}\n        </proyectoContext.Provider>\n    )\n\n}\n\nexport default ProyectoState;"]},"metadata":{},"sourceType":"module"}