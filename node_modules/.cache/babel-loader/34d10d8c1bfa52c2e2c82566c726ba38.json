{"ast":null,"code":"var _jsxFileName = \"/Users/diegoricca/Documents/React/MERNTasks/cliente/src/context/Autenticacion/autenticacionState.js\";\nimport React, { useReducer } from 'react';\nimport autenticacionContext from './autenticacionContext';\nimport autenticacionReducer from './autenticacionReducer';\nimport clienteAxios from '../../config/axios';\nimport tokenAuth from '../../config/token';\nimport { REGISTRO_EXITOSO, REGISTRO_ERROR, OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR, CERRAR_SESION } from '../../types/index';\n\nconst AutenticacionState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    autenticado: null,\n    usuario: null,\n    mensaje: null,\n    cargando: null\n  };\n  const [state, dispatch] = useReducer(autenticacionReducer, initialState);\n\n  const registrarUsuario = async usuario => {\n    try {\n      const respuesta = await clienteAxios.post('api/usuarios', usuario);\n      dispatch({\n        type: REGISTRO_EXITOSO,\n        payload: respuesta.data\n      });\n      usuarioAutenticado();\n    } catch (error) {\n      console.log(error);\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: REGISTRO_ERROR,\n        payload: alerta\n      });\n    }\n  };\n\n  const usuarioAutenticado = async () => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      tokenAuth(token);\n    }\n\n    try {\n      const respuesta = await clienteAxios.get('/api/auth');\n      dispatch({\n        type: OBTENER_USUARIO,\n        payload: respuesta.data.usuario\n      });\n    } catch (error) {\n      dispatch({\n        type: LOGIN_ERROR\n      });\n    }\n  };\n\n  const cerrarSesion = () => {\n    dispatch({\n      type: CERRAR_SESION\n    });\n  };\n\n  const loguearUsuario = async usuario => {\n    try {\n      const respuesta = await clienteAxios.post('/api/auth', usuario);\n      dispatch({\n        type: LOGIN_EXITOSO,\n        payload: respuesta.data\n      });\n      usuarioAutenticado();\n    } catch (error) {\n      console.log(error.response.data.msg);\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: alerta\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(autenticacionContext.Provider, {\n    value: {\n      token: state.token,\n      autenticado: state.autenticado,\n      usuario: state.usuario,\n      mensaje: state.mensaje,\n      cargando: state.mensaje,\n      registrarUsuario,\n      loguearUsuario,\n      usuarioAutenticado,\n      cerrarSesion\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default AutenticacionState;","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/MERNTasks/cliente/src/context/Autenticacion/autenticacionState.js"],"names":["React","useReducer","autenticacionContext","autenticacionReducer","clienteAxios","tokenAuth","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","AutenticacionState","props","initialState","token","localStorage","getItem","autenticado","usuario","mensaje","cargando","state","dispatch","registrarUsuario","respuesta","post","type","payload","data","usuarioAutenticado","error","console","log","alerta","msg","response","categoria","get","cerrarSesion","loguearUsuario","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\nimport autenticacionContext from './autenticacionContext'\nimport autenticacionReducer from './autenticacionReducer'\nimport clienteAxios from '../../config/axios'\nimport tokenAuth from '../../config/token'\n\n\nimport {\n    REGISTRO_EXITOSO,\nREGISTRO_ERROR,\nOBTENER_USUARIO, \nLOGIN_EXITOSO,\nLOGIN_ERROR,\nCERRAR_SESION} from '../../types/index'\n\nconst AutenticacionState = (props) => {\n    const initialState ={\n        token: localStorage.getItem('token'),\n        autenticado: null,\n        usuario: null,\n        mensaje:null,\n        cargando:null\n    }\n    const [state,dispatch] = useReducer(autenticacionReducer,initialState)\n\n    const registrarUsuario = async (usuario) =>{\n        try {\n            const respuesta = await clienteAxios.post('api/usuarios', usuario)\n            dispatch({\n                type:REGISTRO_EXITOSO,\n                payload:respuesta.data\n            })\n\n            usuarioAutenticado()\n        } catch (error) {\n            console.log(error);\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alerta-error'\n            }\n            dispatch({\n                type:REGISTRO_ERROR,\n                payload:alerta\n            })\n            \n        }\n        \n        \n    }\n\n    const usuarioAutenticado = async ()=>{\n        const token = localStorage.getItem('token');\n        if (token){\n            tokenAuth(token);\n        }\n        try {\n            const respuesta = await clienteAxios.get('/api/auth')\n            dispatch({\n                type:OBTENER_USUARIO,\n                payload:respuesta.data.usuario\n            })\n        } catch (error) {\n            dispatch({\n                type: LOGIN_ERROR\n            })\n            \n        }\n    }\n\n    const cerrarSesion = () =>{\n        dispatch({\n            type:CERRAR_SESION\n        })\n    }\n\n    const loguearUsuario = async (usuario)=>{\n        try {\n            \n            const respuesta = await clienteAxios.post('/api/auth', usuario)\n            dispatch({\n                type:LOGIN_EXITOSO,\n                payload:respuesta.data\n            })\n\n            usuarioAutenticado()\n            \n        } catch (error) {\n            console.log(error.response.data.msg);\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alerta-error'\n            }\n            dispatch({\n                type:LOGIN_ERROR,\n                payload:alerta\n            })\n            \n        }\n    }\n\n    return (\n        <autenticacionContext.Provider \n        value={{\n            token:state.token,\n            autenticado:state.autenticado,\n            usuario:state.usuario,\n            mensaje:state.mensaje,\n            cargando:state.mensaje,\n            registrarUsuario,\n            loguearUsuario,\n            usuarioAutenticado,\n            cerrarSesion\n        }}>\n            {props.children}\n        </autenticacionContext.Provider>\n    )\n\n}\nexport default AutenticacionState;\n\n"]},"metadata":{},"sourceType":"module"}