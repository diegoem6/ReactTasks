{"ast":null,"code":"var _jsxFileName = \"/Users/diegoricca/Documents/React/MERNTasks/cliente/src/context/Proyecto/proyectoState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREGAR_PROYECTOS, VALIDAR_FORMULARIO } from '../../types/index';\n\nconst ProyectoState = props => {\n  const proyectostemp = [{\n    id: 1,\n    nombre: \"tienda virtual\"\n  }, {\n    id: 2,\n    nombre: \"recetas\"\n  }, {\n    id: 3,\n    nombre: \"Armar Racing 2021\"\n  }, {\n    id: 4,\n    nombre: \"Diseño sitio web\"\n  }];\n  const initialState = {\n    proyectos: [],\n    formulario: false,\n    error: false\n  }; //Dispatch para ejecutar las acciones\n\n  const [state, dispatch] = useReducer(proyectoReducer, initialState); //defino las funciones para el CRUD de formularios\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_PROYECTO\n    });\n  };\n\n  const obtenerProyectos = () => {\n    dispatch({\n      type: OBTENER_PROYECTOS,\n      payload: proyectostemp\n    });\n  };\n\n  const agregarProyecto = proyecto => {\n    proyecto.id = uuid.v4();\n    dispatch({\n      type: AGREGAR_PROYECTOS,\n      payload: proyecto\n    });\n  };\n\n  const mostrarError = () => {\n    dispatch({\n      type: VALIDAR_FORMULARIO\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(proyectoContext.Provider, {\n    value: {\n      proyectos: state.proyectos,\n      formulario: state.formulario,\n      mostrarerror: state.error,\n      mostrarFormulario,\n      obtenerProyectos,\n      agregarProyecto,\n      mostrarError\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ProyectoState;","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/MERNTasks/cliente/src/context/Proyecto/proyectoState.js"],"names":["React","useReducer","uuid","proyectoContext","proyectoReducer","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTOS","VALIDAR_FORMULARIO","ProyectoState","props","proyectostemp","id","nombre","initialState","proyectos","formulario","error","state","dispatch","mostrarFormulario","type","obtenerProyectos","payload","agregarProyecto","proyecto","v4","mostrarError","mostrarerror","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SACIC,mBADJ,EAEIC,iBAFJ,EAGIC,iBAHJ,EAIIC,kBAJJ,QAI6B,mBAJ7B;;AAQA,MAAMC,aAAa,GAAGC,KAAK,IAAE;AAEzB,QAAMC,aAAa,GAAG,CAClB;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,MAAM,EAAE;AAAhB,GADkB,EAElB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,MAAM,EAAE;AAAhB,GAFkB,EAGlB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,MAAM,EAAE;AAAhB,GAHkB,EAIlB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,MAAM,EAAE;AAAhB,GAJkB,CAAtB;AAOA,QAAMC,YAAY,GAAC;AACfC,IAAAA,SAAS,EAAG,EADG;AAEfC,IAAAA,UAAU,EAAC,KAFI;AAGfC,IAAAA,KAAK,EAAE;AAHQ,GAAnB,CATyB,CAezB;;AACA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBlB,UAAU,CAACG,eAAD,EAAkBU,YAAlB,CAAnC,CAhByB,CAmBzB;;AACA,QAAMM,iBAAiB,GAAE,MAAI;AACzBD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEhB;AADD,KAAD,CAAR;AAGH,GAJD;;AAMA,QAAMiB,gBAAgB,GAAG,MAAI;AACzBH,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEf,iBADD;AAELiB,MAAAA,OAAO,EAAEZ;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,QAAMa,eAAe,GAAGC,QAAQ,IAAG;AAC/BA,IAAAA,QAAQ,CAACb,EAAT,GAAcV,IAAI,CAACwB,EAAL,EAAd;AACAP,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEd,iBADD;AAELgB,MAAAA,OAAO,EAAEE;AAFJ,KAAD,CAAR;AAIH,GAND;;AAQA,QAAME,YAAY,GAAG,MAAK;AACtBR,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEb;AADD,KAAD,CAAR;AAGH,GAJD;;AAMA,sBACI,oBAAC,eAAD,CAAiB,QAAjB;AACI,IAAA,KAAK,EAAE;AACHO,MAAAA,SAAS,EAAEG,KAAK,CAACH,SADd;AAEHC,MAAAA,UAAU,EAAEE,KAAK,CAACF,UAFf;AAGHY,MAAAA,YAAY,EAAEV,KAAK,CAACD,KAHjB;AAIHG,MAAAA,iBAJG;AAKHE,MAAAA,gBALG;AAMHE,MAAAA,eANG;AAOHG,MAAAA;AAPG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWKjB,KAAK,CAACmB,QAXX,CADJ;AAgBH,CA/DD;;AAiEA,eAAepB,aAAf","sourcesContent":["import React, {useReducer} from 'react';\n\nimport uuid from 'uuid'\nimport proyectoContext from './proyectoContext'\nimport proyectoReducer from './proyectoReducer'\nimport {\n    FORMULARIO_PROYECTO, \n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTOS,\n    VALIDAR_FORMULARIO} from '../../types/index'\n\n\n\nconst ProyectoState = props=>{\n    \n    const proyectostemp = [\n        {id: 1, nombre: \"tienda virtual\"},\n        {id: 2, nombre: \"recetas\"},\n        {id: 3, nombre: \"Armar Racing 2021\"},\n        {id: 4, nombre: \"Diseño sitio web\"}\n    ]\n    \n    const initialState={\n        proyectos : [],\n        formulario:false,\n        error: false\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state,dispatch] = useReducer(proyectoReducer, initialState)\n\n\n    //defino las funciones para el CRUD de formularios\n    const mostrarFormulario =()=>{\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        })\n    }\n\n    const obtenerProyectos = ()=>{\n        dispatch({\n            type: OBTENER_PROYECTOS,\n            payload: proyectostemp\n        })\n    }\n\n    const agregarProyecto = proyecto =>{\n        proyecto.id = uuid.v4();\n        dispatch({\n            type: AGREGAR_PROYECTOS,\n            payload: proyecto\n        })\n    }\n\n    const mostrarError = () =>{\n        dispatch({\n            type: VALIDAR_FORMULARIO\n        })\n    }\n\n    return (\n        <proyectoContext.Provider\n            value={{\n                proyectos: state.proyectos,\n                formulario: state.formulario,\n                mostrarerror: state.error,\n                mostrarFormulario, \n                obtenerProyectos,\n                agregarProyecto,\n                mostrarError\n            }}\n        >\n            {props.children}\n        </proyectoContext.Provider>\n    )\n\n}\n\nexport default ProyectoState;"]},"metadata":{},"sourceType":"module"}