{"ast":null,"code":"var _jsxFileName = \"/Users/diegoricca/Documents/React/MERNTasks/cliente/src/context/Proyecto/proyectoState.js\";\nimport React, { useReducer } from 'react';\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREGAR_PROYECTOS, VALIDAR_FORMULARIO, SELECCIONAR_PROYECTO, ELIMINAR_PROYECTO } from '../../types/index';\nimport clienteAxios from '../../config/axios';\n\nconst ProyectoState = props => {\n  const proyectostemp = [{\n    id: 1,\n    nombre: \"tienda virtual\"\n  }, {\n    id: 2,\n    nombre: \"recetas\"\n  }, {\n    id: 3,\n    nombre: \"Armar Racing 2021\"\n  }, {\n    id: 4,\n    nombre: \"Diseño sitio web\"\n  }];\n  const initialState = {\n    proyectos: [],\n    formulario: false,\n    error: false,\n    proyecto: null\n  }; //Dispatch para ejecutar las acciones\n\n  const [state, dispatch] = useReducer(proyectoReducer, initialState); //defino las funciones para el CRUD de formularios\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_PROYECTO\n    });\n  };\n\n  const obtenerProyectos = () => {\n    dispatch({\n      type: OBTENER_PROYECTOS,\n      payload: proyectostemp\n    });\n  };\n\n  const agregarProyecto = async proyecto => {\n    try {\n      const resultado = await clienteAxios.post('/api/proyectos', proyecto);\n      dispatch({\n        type: AGREGAR_PROYECTOS,\n        payload: resultado.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const mostrarError = () => {\n    dispatch({\n      type: VALIDAR_FORMULARIO\n    });\n  };\n\n  const seleccionarProyecto = idProyecto => {\n    dispatch({\n      type: SELECCIONAR_PROYECTO,\n      payload: idProyecto\n    });\n  };\n\n  const eliminarProyecto = idProyecto => {\n    dispatch({\n      type: ELIMINAR_PROYECTO,\n      payload: idProyecto\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(proyectoContext.Provider, {\n    value: {\n      proyectos: state.proyectos,\n      formulario: state.formulario,\n      error: state.error,\n      proyecto: state.proyecto,\n      mostrarFormulario,\n      obtenerProyectos,\n      agregarProyecto,\n      mostrarError,\n      seleccionarProyecto,\n      eliminarProyecto\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ProyectoState;","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/MERNTasks/cliente/src/context/Proyecto/proyectoState.js"],"names":["React","useReducer","proyectoContext","proyectoReducer","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTOS","VALIDAR_FORMULARIO","SELECCIONAR_PROYECTO","ELIMINAR_PROYECTO","clienteAxios","ProyectoState","props","proyectostemp","id","nombre","initialState","proyectos","formulario","error","proyecto","state","dispatch","mostrarFormulario","type","obtenerProyectos","payload","agregarProyecto","resultado","post","data","console","log","mostrarError","seleccionarProyecto","idProyecto","eliminarProyecto","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\nimport proyectoContext from './proyectoContext'\nimport proyectoReducer from './proyectoReducer'\nimport {\n    FORMULARIO_PROYECTO, \n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTOS,\n    VALIDAR_FORMULARIO,\n    SELECCIONAR_PROYECTO,\n    ELIMINAR_PROYECTO} from '../../types/index'\nimport clienteAxios from '../../config/axios'\n\n\nconst ProyectoState = props=>{\n    \n    const proyectostemp = [\n        {id: 1, nombre: \"tienda virtual\"},\n        {id: 2, nombre: \"recetas\"},\n        {id: 3, nombre: \"Armar Racing 2021\"},\n        {id: 4, nombre: \"Diseño sitio web\"}\n    ]\n    \n    const initialState={\n        proyectos : [],\n        formulario:false,\n        error: false, \n        proyecto: null\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state,dispatch] = useReducer(proyectoReducer, initialState)\n\n\n    //defino las funciones para el CRUD de formularios\n    const mostrarFormulario =()=>{\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        })\n    }\n\n    const obtenerProyectos = ()=>{\n        dispatch({\n            type: OBTENER_PROYECTOS,\n            payload: proyectostemp\n        })\n    }\n\n    const agregarProyecto = async proyecto =>{\n\n        try {\n            const resultado = await clienteAxios.post('/api/proyectos',proyecto);\n            dispatch({\n                type: AGREGAR_PROYECTOS,\n                payload: resultado.data\n            })\n        } catch (error) {\n            console.log(error);\n\n        }\n        \n        \n    }\n\n    const mostrarError = () =>{\n        dispatch({\n            type: VALIDAR_FORMULARIO\n        })\n    }\n\n    const seleccionarProyecto = (idProyecto) =>{\n        dispatch({\n            type: SELECCIONAR_PROYECTO,\n            payload:idProyecto\n        })\n    }\n\n    const eliminarProyecto = (idProyecto) =>{\n        dispatch({\n            type:ELIMINAR_PROYECTO,\n            payload:idProyecto\n        })\n    }\n\n    return (\n        <proyectoContext.Provider\n            value={{\n                proyectos: state.proyectos,\n                formulario: state.formulario,\n                error: state.error,\n                proyecto: state.proyecto,\n                mostrarFormulario, \n                obtenerProyectos,\n                agregarProyecto,\n                mostrarError, \n                seleccionarProyecto,\n                eliminarProyecto\n            }}\n        >\n            {props.children}\n        </proyectoContext.Provider>\n    )\n\n}\n\nexport default ProyectoState;"]},"metadata":{},"sourceType":"module"}