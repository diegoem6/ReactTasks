{"ast":null,"code":"var _jsxFileName = \"/Users/diegoricca/Documents/React/MERNTasks/cliente/src/context/Tarea/tareaState.js\";\nimport React, { useReducer } from 'react';\nimport tareaReducer from './tareaReducer';\nimport TareaContext from './tareaContext';\nimport { TAREAS_PROYECTO, CREAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA, CAMBIAR_ESTADO_TAREA } from '../../types/index';\n\nconst TareaState = props => {\n  const initialState = {\n    tareas: [{\n      id: 1,\n      nombre: 'Elegir plataforma',\n      estado: true,\n      idProyecto: 1\n    }, {\n      id: 2,\n      nombre: 'Elegir lenguaje',\n      estado: false,\n      idProyecto: 2\n    }, {\n      id: 3,\n      nombre: 'Elegir hosting',\n      estado: false,\n      idProyecto: 3\n    }, {\n      id: 4,\n      nombre: 'Desarrollar',\n      estado: true,\n      idProyecto: 4\n    }, {\n      id: 5,\n      nombre: 'Elegir plataforma',\n      estado: true,\n      idProyecto: 3\n    }, {\n      id: 6,\n      nombre: 'Elegir lenguaje',\n      estado: false,\n      idProyecto: 2\n    }, {\n      id: 7,\n      nombre: 'Elegir hosting',\n      estado: false,\n      idProyecto: 1\n    }, {\n      id: 8,\n      nombre: 'Elegir plataforma',\n      estado: true,\n      idProyecto: 4\n    }, {\n      id: 9,\n      nombre: 'Elegir lenguaje',\n      estado: false,\n      idProyecto: 3\n    }, {\n      id: 10,\n      nombre: 'Elegir hosting',\n      estado: false,\n      idProyecto: 2\n    }],\n    tareasProyecto: [],\n    errorTarea: false\n  }; //Dispatch para ejecutar las acciones\n\n  const [state, dispatch] = useReducer(tareaReducer, initialState);\n\n  const obtenerTareasProyecto = proyectoID => {\n    dispatch({\n      type: TAREAS_PROYECTO,\n      payload: proyectoID\n    });\n  };\n\n  const crearTarea = tarea => {\n    dispatch({\n      type: CREAR_TAREA,\n      payload: tarea\n    });\n  };\n\n  const validarTarea = () => {\n    dispatch({\n      type: VALIDAR_TAREA\n    });\n  };\n\n  const eliminarTarea = id => {\n    dispatch({\n      type: ELIMINAR_TAREA,\n      payload: id\n    });\n  };\n\n  const cambiarEstadoTarea = tarea => {\n    dispatch({\n      type: CAMBIAR_ESTADO_TAREA,\n      payload: tarea\n    });\n  };\n\n  const seleccionarTarea = tarea => {\n    dispatch({\n      type: SELECCIONAR_TAREA,\n      payload: tarea\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(TareaContext.Provider, {\n    value: {\n      tareas: state.tareas,\n      tareasProyecto: state.tareasProyecto,\n      errorTarea: state.errorTarea,\n      obtenerTareasProyecto,\n      crearTarea,\n      validarTarea,\n      eliminarTarea,\n      cambiarEstadoTarea,\n      seleccionarTarea\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }\n  }, props.children);\n};\n\nexport default TareaState;","map":{"version":3,"sources":["/Users/diegoricca/Documents/React/MERNTasks/cliente/src/context/Tarea/tareaState.js"],"names":["React","useReducer","tareaReducer","TareaContext","TAREAS_PROYECTO","CREAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","CAMBIAR_ESTADO_TAREA","TareaState","props","initialState","tareas","id","nombre","estado","idProyecto","tareasProyecto","errorTarea","state","dispatch","obtenerTareasProyecto","proyectoID","type","payload","crearTarea","tarea","validarTarea","eliminarTarea","cambiarEstadoTarea","seleccionarTarea","SELECCIONAR_TAREA","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\n\nimport tareaReducer from './tareaReducer'\nimport TareaContext from './tareaContext';\n\nimport {TAREAS_PROYECTO,\n    CREAR_TAREA,\n    VALIDAR_TAREA,\n    ELIMINAR_TAREA,\n    CAMBIAR_ESTADO_TAREA\n} from '../../types/index'\n\n\nconst TareaState = props => {\n\n    const initialState={\n        tareas : [\n            {id: 1, nombre:'Elegir plataforma', estado:true, idProyecto:1},\n            {id: 2, nombre:'Elegir lenguaje', estado:false, idProyecto:2},\n            {id: 3, nombre:'Elegir hosting', estado:false, idProyecto:3},\n            {id: 4, nombre:'Desarrollar', estado:true, idProyecto:4},\n            {id: 5, nombre:'Elegir plataforma', estado:true, idProyecto:3},\n            {id: 6, nombre:'Elegir lenguaje', estado:false, idProyecto:2},\n            {id: 7, nombre:'Elegir hosting', estado:false, idProyecto:1},\n            {id: 8, nombre:'Elegir plataforma', estado:true, idProyecto:4},\n            {id: 9, nombre:'Elegir lenguaje', estado:false, idProyecto:3},\n            {id: 10, nombre:'Elegir hosting', estado:false, idProyecto:2}\n        ], \n        tareasProyecto : [],\n        errorTarea:false\n    }\n     //Dispatch para ejecutar las acciones\n    const [state,dispatch] = useReducer(tareaReducer, initialState)\n\n    const obtenerTareasProyecto = (proyectoID) =>{\n        dispatch({\n            type:TAREAS_PROYECTO,\n            payload:proyectoID\n        })\n    }\n\n    const crearTarea = tarea =>{\n        dispatch({\n            type:CREAR_TAREA,\n            payload:tarea\n        })\n    }\n\n    const validarTarea = () =>{\n        dispatch({\n            type:VALIDAR_TAREA\n        })\n    }\n\n    const eliminarTarea = (id)=>{\n        dispatch  ({\n            type:ELIMINAR_TAREA,\n            payload:id\n        })\n    }\n\n    const cambiarEstadoTarea = (tarea) =>{\n        dispatch ({\n            type:CAMBIAR_ESTADO_TAREA,\n            payload:tarea\n        })\n    }\n\n    const seleccionarTarea = (tarea) =>{\n        dispatch ({\n            type:SELECCIONAR_TAREA,\n            payload:tarea\n        })\n    }\n\n     return (\n         <TareaContext.Provider\n            value={{\n                tareas:state.tareas,\n                tareasProyecto: state.tareasProyecto,\n                errorTarea: state.errorTarea,\n                obtenerTareasProyecto,\n                crearTarea,\n                validarTarea,\n                eliminarTarea,\n                cambiarEstadoTarea, \n                seleccionarTarea\n            }}\n         >\n             {props.children}\n         </TareaContext.Provider>\n     )\n\n\n}\n\nexport default TareaState"]},"metadata":{},"sourceType":"module"}